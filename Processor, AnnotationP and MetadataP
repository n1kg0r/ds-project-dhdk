from pandas import DataFrame, read_csv, Series
from sqlite3 import connect

class Processor(object):
    def __init__(self):
        self.dbPathOrUrl = ""
    def getDbPathOrUrl(self):
        return self.dbPathOrUrl 
    def setDbPathOrUrl(self, newpath):
        self.dbPathOrUrl = newpath

class AnnotationProcessor(Processor):
    def __init__(self):
        pass
    def uploadData(self, path:str): 
    #pandas.read_csv  Read a comma-separated values (csv) file into DataFrame.(see documentation)
        annotations = read_csv(path, 
                                keep_default_na=False,
                                dtype={
                                    "id": "string",
                                    "body": "string",
                                    "target": "string",
                                    "motivation": "string"
                                })

        image = annotations[["body"]]
        image = image.rename(columns={"body": "id"})

        with connect(Processor.getDbPathOrUrl()) as con:
            annotations.to_sql("Annotation", con, if_exists="replace", index=False)
            image.to_sql("Image", con, if_exists="replace", index=False)

class MetadataProcessor(Processor):
    def __init__(self):
        pass
    def uploadData(self, path:str): 
        entityWithMetadata= read_csv(path, 
                                keep_default_na=False,
                                dtype={
                                    "id": "string",
                                    "title": "string",
                                    "creator": "string"
                                })


        with connect(Processor.getDbPathOrUrl(self)) as con:
            entityWithMetadata.to_sql("Entity", con, if_exists="replace", index=False)

#upload_metadata = MetadataProcessor()
#upload_metadata.setDbPathOrUrl("./data/new_database.db")
#upload_metadata.uploadData("./data/metadata.csv")
#upload_annotations= AnnotationProcessor()
#upload_annotations.uploadData("./data/annotations.csv")





